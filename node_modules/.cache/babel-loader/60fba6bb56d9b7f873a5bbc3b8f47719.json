{"ast":null,"code":"var _jsxFileName = \"/Users/benedicttedjokusumo/Desktop/hack-a-thing-2-22f-benny-2/src/ViewGames.jsx\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set, child, get } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameMaker() {\n  const num = localStorage.getItem('num');\n  const keyRef = 'users/' + num.toString();\n\n  const readDatabase = () => {\n    get(child(dbRef, keyRef + '/' + tag)).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // Database code sourced from https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=3#web-version-9_2\n\n\n  const firebaseConfig = {\n    databaseURL: \"https://operators-a44ee-default-rtdb.firebaseio.com\"\n  }; // Initialize Firebase\n\n  const app = initializeApp(firebaseConfig); // Initialize Realtime Database and get a reference to the service\n\n  const database = getDatabase(app);\n  const dbRef = ref(database);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = GameMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameMaker\");","map":{"version":3,"names":["initializeApp","getDatabase","ref","set","child","get","GameMaker","num","localStorage","getItem","keyRef","toString","readDatabase","dbRef","tag","then","snapshot","exists","console","log","val","catch","error","firebaseConfig","databaseURL","app","database"],"sources":["/Users/benedicttedjokusumo/Desktop/hack-a-thing-2-22f-benny-2/src/ViewGames.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set, child, get } from \"firebase/database\";\n\nexport default function GameMaker() {\n\n    const num = localStorage.getItem('num')\n    const keyRef = 'users/' + num.toString()\n    \n    const readDatabase = () => {\n        get(child(dbRef, keyRef + '/' + tag)).then((snapshot) => {\n          if (snapshot.exists()) {\n            console.log(snapshot.val())\n          } else {\n            console.log(\"No data available\");\n          }\n        }).catch((error) => {\n          console.error(error);\n        });\n      }\n    // Database code sourced from https://firebase.google.com/docs/database/web/read-and-write?hl=en&authuser=3#web-version-9_2\n    const firebaseConfig = {\n        databaseURL: \"https://operators-a44ee-default-rtdb.firebaseio.com\",\n      };\n      \n    // Initialize Firebase\n    const app = initializeApp(firebaseConfig);\n    // Initialize Realtime Database and get a reference to the service\n    const database = getDatabase(app);\n    const dbRef = ref(database);\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,mBAAlD;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAEhC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;EACA,MAAMC,MAAM,GAAG,WAAWH,GAAG,CAACI,QAAJ,EAA1B;;EAEA,MAAMC,YAAY,GAAG,MAAM;IACvBP,GAAG,CAACD,KAAK,CAACS,KAAD,EAAQH,MAAM,GAAG,GAAT,GAAeI,GAAvB,CAAN,CAAH,CAAsCC,IAAtC,CAA4CC,QAAD,IAAc;MACvD,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;QACrBC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,GAAT,EAAZ;MACD,CAFD,MAEO;QACLF,OAAO,CAACC,GAAR,CAAY,mBAAZ;MACD;IACF,CAND,EAMGE,KANH,CAMUC,KAAD,IAAW;MAClBJ,OAAO,CAACI,KAAR,CAAcA,KAAd;IACD,CARD;EASD,CAVH,CALgC,CAgBhC;;;EACA,MAAMC,cAAc,GAAG;IACnBC,WAAW,EAAE;EADM,CAAvB,CAjBgC,CAqBhC;;EACA,MAAMC,GAAG,GAAGzB,aAAa,CAACuB,cAAD,CAAzB,CAtBgC,CAuBhC;;EACA,MAAMG,QAAQ,GAAGzB,WAAW,CAACwB,GAAD,CAA5B;EACA,MAAMZ,KAAK,GAAGX,GAAG,CAACwB,QAAD,CAAjB;EAEA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;KAhCuBpB,S"},"metadata":{},"sourceType":"module"}