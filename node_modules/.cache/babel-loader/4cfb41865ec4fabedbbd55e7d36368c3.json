{"ast":null,"code":"var _jsxFileName = \"/Users/benedicttedjokusumo/Desktop/hack-a-thing-1-22f-benny/src/GameScene.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './GameScene.css';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = _ref => {\n  _s();\n\n  let {\n    keyRef,\n    targets,\n    nums,\n    limit,\n    solution\n  } = _ref;\n  const [count, setCount] = useState(targets[0]);\n  const [doneTarget, setDone] = useState(1);\n  const [operationCount, setOCount] = useState(0);\n  const [hintNum, setHints] = useState(0);\n  let [operations] = useState([]);\n  let [countHistory] = useState([targets[0]]);\n  let [targetHistory] = useState([0]);\n  const firebaseConfig = {\n    databaseURL: \"https://operators-a44ee-default-rtdb.firebaseio.com\"\n  }; // Initialize Firebase\n\n  const app = initializeApp(firebaseConfig); // Initialize Realtime Database and get a reference to the service\n\n  const database = getDatabase(app);\n  console.log(reference);\n  set(ref(database, reference), {\n    time: 'test',\n    solution: 'solution'\n  });\n\n  const pressOperation = num => {\n    if (operationCount <= limit - 1) {\n      const newCount = performOperation(num);\n\n      if (newCount || newCount === 0) {\n        countHistory.push(newCount);\n        targets.forEach((target, idx) => {\n          if (doneTarget === idx && target === newCount) {\n            setDone(doneTarget + 1);\n            targetHistory.push(1);\n          }\n        });\n        if (targetHistory.length < countHistory.length) targetHistory.push(0);\n        operations.push(num);\n        setOCount(operationCount + 1);\n        setCount(newCount);\n      }\n    } else {\n      console.log('warning!');\n    }\n  };\n\n  const performOperation = operation => {\n    const value = count;\n    console.log(value);\n\n    if (operation.includes(\"sqrt\") && value > 0 && Math.sqrt(value) % 1 === 0) {\n      return Math.sqrt(value);\n    } else if (!operation.includes(\"sqrt\")) {\n      const operand = operation.charAt(0);\n      const number = parseInt(operation.substr(1, operation.length));\n\n      if (operand === \"/\" && value % number === 0 && value !== 0) {\n        return value / number;\n      } else if (operand === \"+\") {\n        return value + number;\n      } else if (operand === \"-\") {\n        return value - number;\n      } else if (operand === \"*\") {\n        return value * number;\n      }\n    }\n  };\n\n  const undoButton = () => {\n    if (operationCount > 0) {\n      let prev_operation = operations.pop();\n      const newCount = performUndo(prev_operation); // eslint-disable-next-line react/prop-types\n\n      targets.forEach((target, idx) => {\n        if (doneTarget === idx + 1 && target === count && targetHistory[operations.length + 1] === 1) {\n          setDone(doneTarget - 1);\n        }\n      });\n      targetHistory.pop();\n      countHistory.pop();\n      setOCount(operationCount - 1);\n      setCount(newCount);\n    } else {\n      console.log('Can not undo!');\n    }\n  };\n\n  const performUndo = operation => {\n    const value = count;\n\n    if (operation.includes(\"sqrt\") && value > 0 && Math.sqrt(value) % 1 === 0) {\n      return Math.sqrt(value);\n    } else if (!operation.includes(\"sqrt\")) {\n      const operand = operation.charAt(0);\n      const number = parseInt(operation.substr(1, operation.length));\n\n      if (operand === \"/\") {\n        return value * number;\n      } else if (operand === \"+\") {\n        return value - number;\n      } else if (operand === \"-\") {\n        return value + number;\n      } else if (operand === \"*\") {\n        return value / number;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  const reset = () => {\n    setCount(targets[0]);\n    setDone(1);\n    setOCount(0);\n\n    for (let i = countHistory.length; i > 1; i--) {\n      countHistory.pop();\n      targetHistory.pop();\n      operations.pop();\n    }\n  };\n\n  const getHint = () => {\n    if (solution.length > hintNum) {\n      setHints(hintNum + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameScene\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countHistory\",\n        children: countHistory.map((elm, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"count-operation\",\n            children: operations[idx - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: targetHistory[idx] === 1 || idx === 0 ? \"count-num-target\" : 'count-num',\n            children: elm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solutions\",\n        children: solution.map((elm, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"solution\",\n          children: hintNum > idx ? elm : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Limit:\", ' ', operationCount, \"/\", limit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"targets\",\n        children: targets.map((target, idx) => /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: doneTarget > idx ? 'done' : '',\n          children: `${idx === 0 ? '' : ' -> '}${target}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), doneTarget >= targets.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GOOD JOB!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operations\",\n        children: nums.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"operation\",\n          type: \"button\",\n          onClick: () => pressOperation(num),\n          children: num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operations\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => undoButton(),\n          children: \"undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => getHint(),\n          children: \"hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game1, \"ORByEbvlCZ9BiP5k4zFIaN4U9bE=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"names":["React","useState","initializeApp","getDatabase","ref","set","Game1","keyRef","targets","nums","limit","solution","count","setCount","doneTarget","setDone","operationCount","setOCount","hintNum","setHints","operations","countHistory","targetHistory","firebaseConfig","databaseURL","app","database","console","log","reference","time","pressOperation","num","newCount","performOperation","push","forEach","target","idx","length","operation","value","includes","Math","sqrt","operand","charAt","number","parseInt","substr","undoButton","prev_operation","pop","performUndo","reset","i","getHint","map","elm"],"sources":["/Users/benedicttedjokusumo/Desktop/hack-a-thing-1-22f-benny/src/GameScene.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './GameScene.css';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\n\n\n\nconst Game1 = ({\n  keyRef, targets, nums, limit, solution\n}) => {\n  const [count, setCount] = useState(targets[0]);\n  const [doneTarget, setDone] = useState(1);\n  const [operationCount, setOCount] = useState(0);\n  const [hintNum, setHints] = useState(0);\n  \n  let [operations] = useState([]);\n  let [countHistory] = useState([targets[0]])\n  let [targetHistory] = useState([0]);\n\n  const firebaseConfig = {\n    databaseURL: \"https://operators-a44ee-default-rtdb.firebaseio.com\",\n  };\n  \n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  // Initialize Realtime Database and get a reference to the service\n  const database = getDatabase(app);\n  console.log(reference)\n  set(ref(database, reference), {\n    time: 'test',\n    solution: 'solution'\n  });\n\n  const pressOperation = (num) => {\n    if (operationCount <= limit - 1) {\n\n      const newCount = performOperation(num);\n      if (newCount || newCount === 0) {\n        countHistory.push(newCount);\n\n        targets.forEach((target, idx) => {\n          if (doneTarget === idx && target === newCount) {\n            setDone(doneTarget + 1);\n            targetHistory.push(1);\n          }\n        });\n  \n        if (targetHistory.length < countHistory.length)\n          targetHistory.push(0)\n        operations.push(num);\n        setOCount(operationCount + 1);\n        setCount(newCount);\n      }\n    } else {\n      console.log('warning!');\n    }\n  };\n\n  const performOperation = (operation) => {\n    \n    const value = count;\n    console.log(value)\n    if (operation.includes(\"sqrt\") && value > 0 && Math.sqrt(value) % 1 === 0) {\n      return Math.sqrt(value)\n    }\n    else if (!operation.includes(\"sqrt\")) {\n      const operand = operation.charAt(0)\n      const number = parseInt(operation.substr(1,operation.length))\n      if (operand === \"/\" && value % number === 0 && value !== 0){\n        return value / number;\n      }\n      else if (operand === \"+\") {\n        return value + number\n      }\n      else if (operand === \"-\") {\n        return value - number\n      }\n      else if (operand === \"*\") {\n        return value * number\n      }\n    }\n  }\n\n  const undoButton = () => {\n\n    if (operationCount > 0) {\n      let prev_operation = operations.pop();\n      const newCount = performUndo(prev_operation);\n      // eslint-disable-next-line react/prop-types\n      targets.forEach((target, idx) => {\n        if (doneTarget === idx+1 && target === count && targetHistory[operations.length+1] === 1) {\n          setDone(doneTarget - 1);\n        }\n      });\n      targetHistory.pop();\n      countHistory.pop();\n      setOCount(operationCount - 1);\n      setCount(newCount);\n    } else {\n      console.log('Can not undo!');\n    }\n  };\n\n  const performUndo = (operation) => {\n    const value = count;\n    if (operation.includes(\"sqrt\") && value > 0 && Math.sqrt(value) % 1 === 0) {\n      return Math.sqrt(value)\n    }\n    else if (!operation.includes(\"sqrt\")) {\n      const operand = operation.charAt(0)\n      const number = parseInt(operation.substr(1,operation.length))\n      if (operand === \"/\"){\n        return value * number;\n      }\n      else if (operand === \"+\") {\n        return value - number\n      }\n      else if (operand === \"-\") {\n        return value + number\n      }\n      else if (operand === \"*\") {\n        return value / number\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  const reset = () => {\n    setCount(targets[0]);\n    setDone(1);\n    setOCount(0);\n    for (let i = countHistory.length; i > 1; i--) {\n      countHistory.pop();\n      targetHistory.pop();\n      operations.pop();\n    }\n  }\n\n  const getHint = () => {\n\n    if (solution.length > hintNum)\n    {\n      setHints(hintNum + 1);\n    }\n  }\n  return (\n\n    <div className=\"gameScene\">\n      <div className='history'>\n        <h2>History</h2>\n        <div className='countHistory'>\n          {countHistory.map((elm, idx) => (\n            <div>\n              <p className= \"count-operation\" >{operations[idx-1]}</p>\n              <p className={targetHistory[idx] === 1  || idx === 0 ? \"count-num-target\" : 'count-num'}>{elm}</p>\n            </div>\n          ))}\n        </div>\n\n        <div className='solutions'>\n\n          {solution.map((elm, idx) => (\n              <p className=\"solution\">{hintNum > idx ? elm : null}</p>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <h1>{count}</h1>\n        <h3>\n          Limit:\n          {' '}\n          {operationCount}\n          /\n          {limit}\n        </h3>\n        <div className=\"targets\">\n          {targets.map((target, idx) => (\n            <h2 className={doneTarget > idx ? 'done' : ''}>\n              {`${idx === 0 ? '' : ' -> '}${target}`}\n            </h2>\n          ))}\n        </div>\n\n        { doneTarget >= targets.length ? <h2>GOOD JOB!</h2> : null}\n        <div className=\"operations\">\n          {nums.map((num) => (\n            <button className=\"operation\" type=\"button\" onClick={() => pressOperation(num)}>{num}</button>\n          ))}\n        </div>\n\n        <div className=\"operations\">\n          <button type=\"button\" onClick={() => undoButton()}>undo</button>\n          <button type=\"button\" onClick={() => reset()}>reset</button>\n          <button type=\"button\" onClick={() => getHint()}>hint</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Game1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}